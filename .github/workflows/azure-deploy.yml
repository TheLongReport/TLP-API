name: Azure Deployment

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # Specify your environment name if you have specific ones

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Azure CLI (This step ensures the CLI is available)
    - name: Set up Azure CLI
      uses: azure/cli@v2.1.0  # This action sets up Azure CLI without inlineScript

    # Log in to Azure (authentication using service principal)
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        enable-AzPSSession: false
        environment: azurecloud
        auth-type: SERVICE_PRINCIPAL

    # Build the .NET application (only if needed)
    - name: Build the application
      run: |
        dotnet restore
        dotnet build --configuration Release

    # Publish the application
    - name: Publish the application
      run: |
        dotnet publish --configuration Release --output ./publish

    # Deploy to Azure Function App or Web App (this part is using Azure CLI commands)
    - name: Deploy to Azure Function App
      run: |
        # Log in to Azure
        az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
        # Deploy using Azure CLI (Replace with your Azure Function App or Web App name and resource group)
        az webapp deployment source config-zip \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name ${{ secrets.AZURE_WEBAPP_NAME }} \
          --src ./publish.zip

    # Clean up if necessary
    - name: Cleanup
      run: |
        echo "Cleaning up resources"
